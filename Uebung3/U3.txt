Übungsblatt 3 Rechnernetze Nils Böhnke

Aufgabe1
Neben Wireshark öffne ich Zweimal ein Terminal und gebe dort python nc_udp.py -l 9999 und in 
das zweite Terminal python nc_udp.py 127.0.0.1 9999 ein, dass selbe mache ich für TCP auch.

Bei der Durchführung mit TCP habe ich den Anzeigenfilter auf tcp.port == 9999 gestellt und konnte somit exakt sehen, welcher traffic dort ist. Dabei ist auffällig, dass das Protokoll mehrfach zu erkennen ist. TCP baut über den 3-Wege-Handshake eine zuverlässige Verbindung auf, SYN, SYN-ACK, ACK.

Bei dem UDP Protokoll ist eindeutig bei der selben Anzahl an Kommandos, nämlich Hallo und Stop auffällig, dass dort viel weniger traffic zu sehen ist.

In den Aufzeichnungen von Wireshark wird dies nochmal deutlich, siehe die Dateien im Ordner.

Durch den sicheren Aufbau von TCP ist UDP hingegen viel unzuverlässiger.



Aufgabe2
In dem Ordner ist der Code.
Beispiel Terminal 1 (User: Marvin, Port *****):
python chat_nc_udp.py Marvin -l *****

Beispiel Terminal 2 (User: Alice, Port *****):
python chat_nc_udp.py Alice -l *****

Marvins Terminal, um sich bei Alice zu registrieren:
register Alice ***.*.*.* *****

Alices Terminal, um sich bei Marvin zu registrieren:
register Marvin ***.*.*.* *****

Terminal von Marvin:
send Alice Hallo Alice!

Terminal von Alice:
send Marvin Hallo Marvin!




Aufgabe3
In dem Ordner ist der Code.
Starte Server:
python chat_nc_tcp.py -l ****

Öffne zwei Terminals und starte Clients:
python chat_nc_tcp.py ***.*.*.* ****

Gib in Terminal 1 ein:
register Alice

In Terminal 2:
register Marvin

Eingabe Terminal 1:
send Marvin Hallo Marvin!

Eingabe Terminal 2:
send Alice Hallo Alice!


Aufgabe4
Nach Wikipedia bedeutet die Verwendung des IEEE 802.3 Standards, dass bei einer fallenden Flanke eine logische 0 kommt, bei einer steigenden Flanke eine logische 1.

Die Data-Sektion wirkt, als wäre dort schonmal der Manchester Code angewendet worden, dann könnte man dekodieren, da für die Manchester Codierung im halben Intervall immer ein Wechsel vorliegt. Deshalb lässt sich vermuten, dass dort schon ein Manchester Code existiert, aber die Intervalle welche keinen Übergang in der Mitte haben, weisen Fehler auf. Dekodiert: 0 1 1 ? ? 0 ?

Nach intensiver Recherche bin ich zu keinem anderen Resultat gekommen, da für eine Manchester Codierung Wechsel nach ganzen Intervallen vorliegen müssen, was ich anhand von Beispielen gesehen habe.

Ich habe dann Schritt für Schritt die dekodierte Lösung herausgearbeitet, nachdem ich recherchiert habe.
 
  1 2 3 4 5 6 7
1   _ _
0 _     ? ? _ ?


Hier ein Beispiel aus einer Klausur der TUM: https://www.net.in.tum.de/pub/grnvs/2013/endterm_2011_solution.pdf.


   